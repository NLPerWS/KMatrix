{"lineList": [{"from": "3o7n3hvf85", "label": "path -> path", "label_from": "path", "label_from_outputList": ["path"], "label_to": "path", "label_to_inputList": ["path"], "to": "fowfnlykb"}, {"from": "fowfnlykb", "label": "documents -> value", "label_from": "documents", "label_from_outputList": ["documents"], "label_to": "value", "label_to_inputList": ["value"], "to": "xjj85y6rj"}, {"from": "4434hgi2n", "label": "path -> path", "label_from": "path", "label_from_outputList": ["path"], "label_to": "path", "label_to_inputList": ["path"], "to": "zf2euwrokb"}, {"from": "zf2euwrokb", "label": "documents -> value", "label_from": "documents", "label_from_outputList": ["documents"], "label_to": "value", "label_to_inputList": ["value"], "to": "xjj85y6rj"}, {"from": "xzm7hb5dhe", "label": "path -> path", "label_from": "path", "label_from_outputList": ["path"], "label_to": "path", "label_to_inputList": ["path"], "to": "brshi1bv6q"}, {"from": "brshi1bv6q", "label": "documents -> value", "label_from": "documents", "label_from_outputList": ["documents"], "label_to": "value", "label_to_inputList": ["value"], "to": "xjj85y6rj"}, {"from": "xjj85y6rj", "label": "final_result -> checkData", "label_from": "final_result", "label_from_outputList": ["final_result"], "label_to": "checkData", "label_to_inputList": ["checkData"], "to": "fnyppgj47e"}, {"from": "fnyppgj47e", "label": "yes -> documents", "label_from": "yes", "label_from_outputList": ["yes", "no"], "label_to": "documents", "label_to_inputList": ["documents"], "to": "pjxv44fka"}], "name": "v16_save_upload_to_ES", "nodeList": [{"codeFilePath": "kninjllm/llm_linearizer/LinearizerToText.py", "components": [], "description": "", "ico": "el-icon-time", "id": "xjj85y6rj", "initParams": [{"name": "knowledge_line_count", "type": "int\n(required)\nAmount of knowledge linked to this component", "value": "3"}, {"name": "max_length", "type": "int\n(selectable)\nMaximum number of tokens for text", "value": "100"}], "inputParams": [{"name": "value", "type": "List[Any]", "value": ""}], "left": "419px", "name": "UnifiedVerbalizer", "outputParams": [{"name": "final_result", "type": "Dict[str, Any]", "value": ""}], "state": "success", "top": "269px", "type": "UnifiedVerbalizer"}, {"codeFilePath": "kninjllm/llm_knowledgeUploader/KnowledgeUploader.py", "components": [], "description": "", "ico": "el-icon-time", "id": "3o7n3hvf85", "initParams": [{"name": "Upload data files", "type": "upload", "value": ".txt,.pdf,.tsv,.doc,.docx,.md"}, {"name": "savePath", "type": "str\n(unchanged)\nFile upload temporary cache path", "value": "dir_knowledge_temp_upload_text/"}], "inputParams": [], "left": "43.6667px", "name": "LocalText", "outputParams": [{"name": "path", "type": "str", "value": ""}], "state": "success", "top": "30px", "type": "Upload_Text"}, {"codeFilePath": "kninjllm/llm_knowledgeUploader/KnowledgeUploader.py", "components": [], "description": "", "ico": "el-icon-time", "id": "4434hgi2n", "initParams": [{"name": "Upload data files", "type": "upload", "value": ".xlsx,.xls,.json,.jsonl"}, {"name": "savePath", "type": "str\n(unchanged)\nFile upload temporary cache path", "value": "dir_knowledge_temp_upload_table/"}], "inputParams": [], "left": "409px", "name": "LocalTable", "outputParams": [{"name": "path", "type": "str", "value": ""}], "state": "success", "top": "14px", "type": "Upload_Table"}, {"codeFilePath": "kninjllm/llm_knowledgeUploader/KnowledgeUploader.py", "components": [], "description": "", "ico": "el-icon-time", "id": "xzm7hb5dhe", "initParams": [{"name": "Upload data files", "type": "upload", "value": ".json,.jsonl"}, {"name": "savePath", "type": "str\n(unchanged)\nFile upload temporary cache path", "value": "dir_knowledge_temp_upload_kg/"}], "inputParams": [], "left": "764px", "name": "LocalKG", "outputParams": [{"name": "path", "type": "str", "value": ""}], "state": "success", "top": "23px", "type": "Upload_KG"}, {"codeFilePath": "kninjllm/llm_preprocess/TextPreprecess.py", "components": [], "description": "", "ico": "el-icon-time", "id": "fowfnlykb", "initParams": [], "inputParams": [{"name": "path", "type": "str", "value": ""}], "left": "37px", "name": "TextConvertor", "outputParams": [{"name": "documents", "type": "List[Dict[str, Any]]", "value": ""}], "state": "success", "top": "156px", "type": "TextPreprecess"}, {"codeFilePath": "kninjllm/llm_preprocess/TablePreprecess.py", "components": [], "description": "", "ico": "el-icon-time", "id": "zf2euwrokb", "initParams": [], "inputParams": [{"name": "path", "type": "str", "value": ""}], "left": "424px", "name": "TableConvertor", "outputParams": [{"name": "documents", "type": "List[Dict[str, Any]]", "value": ""}], "state": "success", "top": "143px", "type": "TablePreprecess"}, {"codeFilePath": "kninjllm/llm_preprocess/KgPreprecess.py", "components": [], "description": "", "ico": "el-icon-time", "id": "brshi1bv6q", "initParams": [], "inputParams": [{"name": "path", "type": "str", "value": ""}], "left": "756px", "name": "KGConvertor", "outputParams": [{"name": "documents", "type": "List[Dict[str, Any]]", "value": ""}], "state": "success", "top": "151px", "type": "KgPreprecess"}, {"codeFilePath": "kninjllm/llm_store_saver/SaveToElasticSearchDB.py", "components": [], "description": "", "ico": "el-icon-time", "id": "pjxv44fka", "initParams": [{"name": "index", "type": "str\n(required)\nES index", "value": "upload_liner_data"}, {"name": "ebbedding_retriever_nameList", "type": "List[str]\n(selectable)\nA retriever that requires embedding\noptional parameters:\nBGE,contriever,DPR,E5,BERT", "value": "[\"BGE\",\"contriever\",\"DPR\",\"E5\",\"BERT\"]"}], "inputParams": [{"name": "documents", "type": "List[Dict[str,Any]]", "value": ""}], "left": "406px", "name": "SaveToElasticSearch", "outputParams": [{"name": "final_result", "type": "Dict[str,Any]", "value": ""}], "state": "success", "top": "641px", "type": "SaveToElasticSearchDB"}, {"codeFilePath": "kninjllm/llm_router/conditional_router.py", "description": "Used to determine whether the linearizer has completed processing all knowledge\n Yes:yes\n No:no", "ico": "el-icon-time", "id": "fnyppgj47e", "initParams": [{"name": "max_loop_count", "type": "int\n(selectable)\nControls the maximum number of cycles of the flow chart,\nYou can use temp_loop_count and max_loop_count in routes to determine whether the flow chart has reached the maximum number of cycles", "value": 0}, {"name": "routes", "type": "str\n(unchanged)\nroutes array", "value": "[{\"condition\": \"{{ checkData.flag == 1 }}\",\"output\": \"{{ checkData['knowledge'] }}\",\"output_name\": \"yes\",\"output_type\": List[Dict[str,Any]]},{\"condition\": \"{{ checkData.flag == 0}}\",\"output\": \"{{ 'continue' }}\",\"output_name\": \"no\",\"output_type\": str}]"}], "inputParams": [{"name": "checkData", "type": "Any", "value": ""}], "left": "413px", "name": "checkLinerRouter", "outputParams": [{"name": "yes", "type": "str", "value": ""}, {"name": "no", "type": "str", "value": ""}], "state": "success", "top": "392px", "type": "checkLinerCountRouter"}], "pipeLineType": "KnowledgeIntegration"}